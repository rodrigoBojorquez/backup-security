// <auto-generated />
using System;
using Infraestructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infraestructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241105235014_examen")]
    partial class examen
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Administrative", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ColaboratorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Payroll")
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ColaboratorId");

                    b.ToTable("Administratives");
                });

            modelBuilder.Entity("Domain.Entities.Colaborator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsProfessor")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Colaborators");
                });

            modelBuilder.Entity("Domain.Entities.jugador", b =>
                {
                    b.Property<int>("pkJugador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("pkJugador"));

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<string>("posicion")
                        .HasColumnType("text");

                    b.HasKey("pkJugador");

                    b.ToTable("jugador");
                });

            modelBuilder.Entity("Domain.Entities.logs", b =>
                {
                    b.Property<int>("idLog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idLog"));

                    b.Property<string>("Datos")
                        .HasColumnType("text");

                    b.Property<string>("NomFuncion")
                        .HasColumnType("text");

                    b.Property<string>("StatusLog")
                        .HasColumnType("text");

                    b.Property<string>("fecha")
                        .HasColumnType("text");

                    b.Property<string>("ipAddress")
                        .HasColumnType("text");

                    b.Property<string>("mensaje")
                        .HasColumnType("text");

                    b.HasKey("idLog");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Domain.Entities.persona", b =>
                {
                    b.Property<int>("PkPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PkPersona"));

                    b.Property<string>("CancionFav")
                        .HasColumnType("text");

                    b.Property<string>("Ciudad")
                        .HasColumnType("text");

                    b.Property<string>("ColorFav")
                        .HasColumnType("text");

                    b.Property<string>("ComidaFav")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("PkPersona");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("Domain.Entities.Professor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ColaboratorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Department")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ColaboratorId");

                    b.ToTable("Professors");
                });

            modelBuilder.Entity("Domain.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Domain.Entities.Administrative", b =>
                {
                    b.HasOne("Domain.Entities.Colaborator", "Colaborator")
                        .WithMany()
                        .HasForeignKey("ColaboratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborator");
                });

            modelBuilder.Entity("Domain.Entities.Professor", b =>
                {
                    b.HasOne("Domain.Entities.Colaborator", "Colaborator")
                        .WithMany()
                        .HasForeignKey("ColaboratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborator");
                });
#pragma warning restore 612, 618
        }
    }
}
